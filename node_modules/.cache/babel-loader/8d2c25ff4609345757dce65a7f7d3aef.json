{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getParsedAccountByMint = void 0;\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar solana_1 = require(\"./config/solana\");\n\nvar utils_1 = require(\"./utils\");\n/**\n * This fn look for the account associated with passed NFT token mint field.\n * This associated account holds some useful information like who is current owner of token.\n * it is stored within result.account.data.parsed.info.owner\n * Finding the token owner is main purpose of using this fn.\n */\n\n\nvar getParsedAccountByMint = function getParsedAccountByMint(_a) {\n  var mintAddress = _a.mintAddress,\n      _b = _a.connection,\n      connection = _b === void 0 ? (0, utils_1.createConnectionConfig)() : _b,\n      _c = _a.stringifyPubKeys,\n      stringifyPubKeys = _c === void 0 ? true : _c;\n  return __awaiter(void 0, void 0, void 0, function () {\n    var res, firstResult, formatedData;\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , connection.getParsedProgramAccounts(new web3_js_1.PublicKey(solana_1.TOKEN_PROGRAM), {\n            filters: [{\n              dataSize: 165\n            }, {\n              memcmp: {\n                offset: 0,\n                bytes: mintAddress\n              }\n            }]\n          })];\n\n        case 1:\n          res = _d.sent();\n\n          if (!(res === null || res === void 0 ? void 0 : res.length)) {\n            return [2\n            /*return*/\n            , undefined];\n          }\n\n          firstResult = res[0];\n          formatedData = stringifyPubKeys ? publicKeyToString(firstResult) : firstResult;\n          return [2\n          /*return*/\n          , formatedData];\n      }\n    });\n  });\n};\n\nexports.getParsedAccountByMint = getParsedAccountByMint;\n\nvar publicKeyToString = function publicKeyToString(tokenData) {\n  var _a, _b, _c, _d;\n\n  return __assign(__assign({}, tokenData), {\n    account: __assign(__assign({}, tokenData === null || tokenData === void 0 ? void 0 : tokenData.account), {\n      owner: (_b = (_a = new web3_js_1.PublicKey(tokenData === null || tokenData === void 0 ? void 0 : tokenData.account.owner)) === null || _a === void 0 ? void 0 : _a.toString) === null || _b === void 0 ? void 0 : _b.call(_a)\n    }),\n    pubkey: (_d = (_c = new web3_js_1.PublicKey(tokenData === null || tokenData === void 0 ? void 0 : tokenData.pubkey)) === null || _c === void 0 ? void 0 : _c.toString) === null || _d === void 0 ? void 0 : _d.call(_c)\n  });\n};","map":{"version":3,"sources":["../src/getParsedAccountByMint.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedAccountByMint = void 0;\nvar web3_js_1 = require(\"@solana/web3.js\");\nvar solana_1 = require(\"./config/solana\");\nvar utils_1 = require(\"./utils\");\n/**\n * This fn look for the account associated with passed NFT token mint field.\n * This associated account holds some useful information like who is current owner of token.\n * it is stored within result.account.data.parsed.info.owner\n * Finding the token owner is main purpose of using this fn.\n */\nvar getParsedAccountByMint = function (_a) {\n    var mintAddress = _a.mintAddress, _b = _a.connection, connection = _b === void 0 ? (0, utils_1.createConnectionConfig)() : _b, _c = _a.stringifyPubKeys, stringifyPubKeys = _c === void 0 ? true : _c;\n    return __awaiter(void 0, void 0, void 0, function () {\n        var res, firstResult, formatedData;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0: return [4 /*yield*/, connection.getParsedProgramAccounts(new web3_js_1.PublicKey(solana_1.TOKEN_PROGRAM), {\n                        filters: [\n                            { dataSize: 165 },\n                            {\n                                memcmp: {\n                                    offset: 0,\n                                    bytes: mintAddress,\n                                },\n                            },\n                        ],\n                    })];\n                case 1:\n                    res = _d.sent();\n                    if (!(res === null || res === void 0 ? void 0 : res.length)) {\n                        return [2 /*return*/, undefined];\n                    }\n                    firstResult = res[0];\n                    formatedData = stringifyPubKeys\n                        ? publicKeyToString(firstResult)\n                        : firstResult;\n                    return [2 /*return*/, formatedData];\n            }\n        });\n    });\n};\nexports.getParsedAccountByMint = getParsedAccountByMint;\nvar publicKeyToString = function (tokenData) {\n    var _a, _b, _c, _d;\n    return (__assign(__assign({}, tokenData), { account: __assign(__assign({}, tokenData === null || tokenData === void 0 ? void 0 : tokenData.account), { owner: (_b = (_a = new web3_js_1.PublicKey(tokenData === null || tokenData === void 0 ? void 0 : tokenData.account.owner)) === null || _a === void 0 ? void 0 : _a.toString) === null || _b === void 0 ? void 0 : _b.call(_a) }), pubkey: (_d = (_c = new web3_js_1.PublicKey(tokenData === null || tokenData === void 0 ? void 0 : tokenData.pubkey)) === null || _c === void 0 ? void 0 : _c.toString) === null || _d === void 0 ? void 0 : _d.call(_c) }));\n};\n//# sourceMappingURL=getParsedAccountByMint.js.map"]},"metadata":{},"sourceType":"script"}