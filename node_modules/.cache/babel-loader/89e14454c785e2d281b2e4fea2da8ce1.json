{"ast":null,"code":"var _jsxFileName = \"/Users/liam/react-moonland/src/App.js\";\nimport React from \"react\";\nimport Unity, { UnityContext } from \"react-unity-webgl\";\nconst unityContext = new UnityContext({\n  loaderUrl: \"static/public/Build/public.loader.js\",\n  dataUrl: \"build/myunityapp.data\",\n  frameworkUrl: \"build/myunityapp.framework.js\",\n  codeUrl: \"build/myunityapp.wasm\"\n});\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Unity, {\n    unityContext: unityContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default App; // import styles from './App.css';\n// import React, {useState, useEffect } from \"react\";\n// import Unity, { UnityContext } from \"react-unity-webgl\";\n// import * as solanaWeb3 from '@solana/web3.js';\n// import parse from 'html-react-parser';\n// import background from \"./background.png\";\n// import ProgressBar from 'react-bootstrap/Button';\n// import reactDom from 'react-dom';\n// const unityContext = new UnityContext({\n//   loaderUrl: \"/static/public/Build/public.loader.js\",\n//   // dataUrl: \"/build/public/Build/public.data\",\n//   frameworkUrl: \"static/public/Build/public.framework.js.unityweb\",\n//   codeUrl: \"/static/public/Build/public.wasm.unityweb\",\n// });\n// function App() {\n//   return <Unity unityContext={unityContext} />;\n// }\n// // function App() {\n// //   const [isLoaded, setIsLoaded] = useState(false);\n// //   const [progression, setProgression] = useState(0);\n// //   const [provider, setProvider] = useState(\"\");\n//   const getProvider = async () => {\n//     if (\"solana\" in window) {\n//       await window.solana.connect(); // opens wallet to connect to\n//       const provider = window.solana;\n//       if (provider.isPhantom) {\n//         console.log(\"Is Phantom installed?  \", provider.isPhantom);\n//         return provider;\n//       }\n//     } else {\n//       window.alert('Install https://www.phantom.app/');\n//     }\n//   };\n//   var publicKey;\n//   window.onload = () => {\n//     getProvider().then(provider => {\n//       console.log('key',\n//       provider.publicKey.toString());\n//       publicKey = provider.publicKey.toString();\n//       setProvider(provider.publicKey.toString());\n//     })\n//     .catch(function(error){\n//       console.log(error)\n//     });\n//   }\n//   useEffect( () => {\n//    setProvider(publicKey);\n//   }, []);\n//   useEffect( () => {\n//     setProvider(publicKey);\n//    }, []);\n//    useEffect(function () {\n//     unityContext.on(\"GetWallet\", function () {\n//       if (window.solana.isConnected)\n//       {\n//         console.log(window.solana.publicKey.toString());\n//       console.log(provider.publicKey);\n//       unityContext.send(\"Wallet\", \"SetWallet\", window.solana.publicKey.toString());\n//       }\n//       else\n//       {\n//         window.alert(\"Pleas Connect your Wallet or play like a guest\");\n//       }\n//     });\n//   }, []);\n//   useEffect(function () {\n//     unityContext.on(\"progress\", function (progression) {\n//       setProgression(progression);\n//     });\n//   }, []);\n//   useEffect(function () {\n//     unityContext.on(\"loaded\", function () {\n//       setIsLoaded(true);\n//     });\n//   }, []);\n//   return (\n//   <div style = {{\n//     visibility: isLoaded ? \"hidden\" : \"visible\",\n//     backgroundImage: `url(${background})`,\n//       backgroundSize: \"cover\",\n//       height: \"100%\",\n//       width: \"100%\",\n//       color: \"#f5f5f5\",\n//     position: 'absolute',\n//     left: 0,\n//     top: 0,\n//   }}>\n//    <div>\n//   <ProgressBar variant=\"success\" now={progression * 100}\n//   style={{ visibility: isLoaded ? \"hidden\" : \"visible\",\n//   height: \"10px\",\n//   width: \"100%\",\n//   position: \"absolute\",\n//   bottom: 0,\n//   color: \"red\",\n//   }}\n//   />\n//     </div>\n//    <p\n//     style={{ visibility: isLoaded ? \"hidden\" : \"visible\",\n//     height: \"30px\",\n//     width: \"100%\",\n//     position: \"absolute\",\n//     textAlign: 'center',\n//     bottom: \"100px\",\n//     fontSize: \"2em\",\n//     fontColor: \"red\",\n//     }}>help me...</p>\n//    <div>\n//    <Unity\n//       style={{ visibility: isLoaded ? \"visible\" : \"hidden\",\n//         height: \"100%\",\n//         width: \"100%\",\n//         background: \"grey\",\n//         position: 'absolute',\n//         left: 0,\n//         top: 0,\n//         overflow: \"hidden\",\n//     }}\n//       unityContext={unityContext}\n//     />\n//     </div>\n//     </div>\n//   );\n// // export default App;","map":{"version":3,"sources":["/Users/liam/react-moonland/src/App.js"],"names":["React","Unity","UnityContext","unityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,YAAhB,QAAoC,mBAApC;AAEA,MAAMC,YAAY,GAAG,IAAID,YAAJ,CAAiB;AACpCE,EAAAA,SAAS,EAAE,sCADyB;AAEpCC,EAAAA,OAAO,EAAE,uBAF2B;AAGpCC,EAAAA,YAAY,EAAE,+BAHsB;AAIpCC,EAAAA,OAAO,EAAE;AAJ2B,CAAjB,CAArB;;AAOA,SAASC,GAAT,GAAe;AACb,sBAAO,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEL,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,eAAeK,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["import React from \"react\";\nimport Unity, { UnityContext } from \"react-unity-webgl\";\n\nconst unityContext = new UnityContext({\n  loaderUrl: \"static/public/Build/public.loader.js\",\n  dataUrl: \"build/myunityapp.data\",\n  frameworkUrl: \"build/myunityapp.framework.js\",\n  codeUrl: \"build/myunityapp.wasm\",\n});\n\nfunction App() {\n  return <Unity unityContext={unityContext} />;\n}\n\nexport default App;\n\n// import styles from './App.css';\n// import React, {useState, useEffect } from \"react\";\n// import Unity, { UnityContext } from \"react-unity-webgl\";\n// import * as solanaWeb3 from '@solana/web3.js';\n// import parse from 'html-react-parser';\n// import background from \"./background.png\";\n// import ProgressBar from 'react-bootstrap/Button';\n// import reactDom from 'react-dom';\n\n\n\n\n// const unityContext = new UnityContext({\n//   loaderUrl: \"/static/public/Build/public.loader.js\",\n//   // dataUrl: \"/build/public/Build/public.data\",\n//   frameworkUrl: \"static/public/Build/public.framework.js.unityweb\",\n//   codeUrl: \"/static/public/Build/public.wasm.unityweb\",\n// });\n\n\n\n// function App() {\n//   return <Unity unityContext={unityContext} />;\n// }\n\n// // function App() {\n// //   const [isLoaded, setIsLoaded] = useState(false);\n// //   const [progression, setProgression] = useState(0);\n// //   const [provider, setProvider] = useState(\"\");\n  \n\n\n//   const getProvider = async () => {\n//     if (\"solana\" in window) {\n      \n//       await window.solana.connect(); // opens wallet to connect to\n  \n//       const provider = window.solana;\n//       if (provider.isPhantom) {\n//         console.log(\"Is Phantom installed?  \", provider.isPhantom);\n//         return provider;\n//       }\n//     } else {\n//       window.alert('Install https://www.phantom.app/');\n//     }\n//   };\n  \n//   var publicKey;\n  \n//   window.onload = () => {\n  \n//     getProvider().then(provider => {\n//       console.log('key',\n      \n      \n//       provider.publicKey.toString());\n//       publicKey = provider.publicKey.toString();\n//       setProvider(provider.publicKey.toString());\n//     })\n//     .catch(function(error){\n//       console.log(error)\n//     });\n  \n//   }\n  \n\n\n//   useEffect( () => {\n//    setProvider(publicKey);\n//   }, []);\n//   useEffect( () => {\n//     setProvider(publicKey);\n//    }, []);\n\n\n//    useEffect(function () {\n\n    \n//     unityContext.on(\"GetWallet\", function () {\n\n         \n     \n//       if (window.solana.isConnected)\n//       {\n//         console.log(window.solana.publicKey.toString());\n      \n//       console.log(provider.publicKey);\n//       unityContext.send(\"Wallet\", \"SetWallet\", window.solana.publicKey.toString());\n\n//       }\n//       else\n//       {\n//         window.alert(\"Pleas Connect your Wallet or play like a guest\");\n//       }\n      \n\n      \n     \n//     });\n//   }, []);\n\n\n//   useEffect(function () {\n//     unityContext.on(\"progress\", function (progression) {\n//       setProgression(progression);\n//     });\n//   }, []);\n\n\n//   useEffect(function () {\n//     unityContext.on(\"loaded\", function () {\n//       setIsLoaded(true);\n//     });\n//   }, []);\n \n\n\n\n//   return (\n\n//   <div style = {{\n//     visibility: isLoaded ? \"hidden\" : \"visible\",\n//     backgroundImage: `url(${background})`,\n//       backgroundSize: \"cover\",\n//       height: \"100%\",\n//       width: \"100%\",\n//       color: \"#f5f5f5\",\n//     position: 'absolute',\n//     left: 0,\n//     top: 0,\n\n    \n//   }}>\n//    <div>\n//   <ProgressBar variant=\"success\" now={progression * 100}\n//   style={{ visibility: isLoaded ? \"hidden\" : \"visible\",\n//   height: \"10px\",\n//   width: \"100%\",\n//   position: \"absolute\",\n//   bottom: 0,\n//   color: \"red\",\n//   }}\n  \n//   />\n  \n//     </div>\n    \n//    <p\n//     style={{ visibility: isLoaded ? \"hidden\" : \"visible\",\n//     height: \"30px\",\n//     width: \"100%\",\n//     position: \"absolute\",\n//     textAlign: 'center',\n//     bottom: \"100px\",\n//     fontSize: \"2em\",\n//     fontColor: \"red\",\n\n    \n \n//     }}>help me...</p>\n   \n//    <div>\n//    <Unity\n//       style={{ visibility: isLoaded ? \"visible\" : \"hidden\",\n//         height: \"100%\",\n//         width: \"100%\",\n//         background: \"grey\",\n//         position: 'absolute',\n//         left: 0,\n//         top: 0,\n//         overflow: \"hidden\",\n     \n//     }}\n//       unityContext={unityContext}\n//     />\n//     </div>\n//     </div>\n//   );\n\n\n// // export default App;"]},"metadata":{},"sourceType":"module"}