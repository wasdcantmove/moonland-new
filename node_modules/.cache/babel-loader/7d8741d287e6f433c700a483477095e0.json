{"ast":null,"code":"import _regeneratorRuntime from\"/Users/liam/react-moonland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/liam/react-moonland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/liam/react-moonland/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Unity,{UnityContext}from\"react-unity-webgl\";import background from\"./background.png\";import axios from\"axios\";import{Connection,clusterApiUrl}from\"@solana/web3.js\";import{getParsedNftAccountsByOwner,isValidSolanaAddress,createConnectionConfig}from\"@nfteyez/sol-rayz\";import'./App.css';var publicKey;var allNftData;var loc=window.location.href+'';if(loc.indexOf('http://')==0){window.location.href=loc.replace('http://','https://');}var unityContext=new UnityContext({loaderUrl:\"./Build/public.loader.js\",dataUrl:\"./Build/public.data\",frameworkUrl:\"./Build/public.framework.js\",codeUrl:\"./Build/public.wasm\"});function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoaded=_useState2[0],setIsLoaded=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),progression=_useState4[0],setProgression=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),provider=_useState6[0],setProvider=_useState6[1];var getProvider=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _provider;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(\"solana\"in window)){_context.next=8;break;}_context.next=3;return window.solana.connect();case 3:_provider=window.solana;if(!_provider.isPhantom){_context.next=6;break;}return _context.abrupt(\"return\",_provider);case 6:_context.next=9;break;case 8:window.alert('Install https://www.phantom.app/');case 9:case\"end\":return _context.stop();}}},_callee);}));return function getProvider(){return _ref.apply(this,arguments);};}();function letsgo(){return _letsgo.apply(this,arguments);}//create a connection\nfunction _letsgo(){_letsgo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var data,_data2;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_data2=function _data4(){_data2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var res;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return getAllNftData();case 2:res=_context6.sent;getNftTokenData();case 4:case\"end\":return _context6.stop();}}},_callee6);}));return _data2.apply(this,arguments);};data=function _data3(){return _data2.apply(this,arguments);};createConnection();getProvider();data();case 5:case\"end\":return _context7.stop();}}},_callee7);}));return _letsgo.apply(this,arguments);}var createConnection=function createConnection(){// return new Connection(clusterApiUrl(\"devnet\"));\nreturn new Connection(\"https://solana-api.projectserum.com/\",{headers:{\"Access-Control-Allow-Origin\":\"*\",\"Access-Control-Request-Headers\":\"*\",\"Access-Control-Allow-Methods\":\"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\"Access-Control-Allow-Headers\":\"Origin, Content-Type\"},mode:'no-cors'});// Connection(\"https://www.whateverorigin.org/get?url=\" + clusterApiUrl(\"mainnet-beta\"))\n};//get NFT\nvar getAllNftData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var connect,_provider2,ownerToken,result,nfts;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;connect=createConnectionConfig(\"https://solana-api.projectserum.com/\",{headers:{\"Access-Control-Allow-Origin\":\"*\",\"Access-Control-Request-Headers\":\"*\",\"Access-Control-Allow-Methods\":\"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\"Access-Control-Allow-Headers\":\"Origin, Content-Type\"},mode:'no-cors'});// const connect =  createConnectionConfig(clusterApiUrl(\"devnet\"));\n_provider2=getProvider();ownerToken=publicKey;result=isValidSolanaAddress(ownerToken);_context2.next=7;return getParsedNftAccountsByOwner({publicAddress:ownerToken,connection:connect,serialization:true});case 7:nfts=_context2.sent;return _context2.abrupt(\"return\",nfts);case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function getAllNftData(){return _ref2.apply(this,arguments);};}();//Function to get all nft data\nvar getNftTokenData=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var root,nftData,data,n,i,val,newJson;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;root={data:{arr:[]}};_context3.next=4;return getAllNftData();case 4:nftData=_context3.sent;data=Object.keys(nftData).map(function(key){return nftData[key];});n=data.length;i=0;case 8:if(!(i<n)){_context3.next=16;break;}_context3.next=11;return axios.get(data[i].data.uri,{statusCode:200,headers:{// \"Access-Control-Allow-Origin\":\"*\",\n// \"Access-Control-Request-Headers\":\"*\",\n// \"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n// \"Access-Control-Allow-Headers\": \"Origin, Content-Type\"\n},mode:'no-cors'});case 11:val=_context3.sent;root.data.arr.push(val);case 13:i++;_context3.next=8;break;case 16:newJson=JSON.parse(root.data,function(key,value){if(typeof value==='number'){return value.toString();}return value;});allNftData=newJson;// console.log(JSON.stringify(allNftData));\nunityContext.send(\"SolanaWalletConnect\",\"SetNFTData\",JSON.stringify(allNftData));return _context3.abrupt(\"return\",root.data.arr);case 22:_context3.prev=22;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 25:case\"end\":return _context3.stop();}}},_callee3,null,[[0,22]]);}));return function getNftTokenData(){return _ref3.apply(this,arguments);};}();function convertNumbers(jsonArray){var stringifyNumbers=function stringifyNumbers(obj){var result={};jsonArray.entries(obj).map(function(entry){var type=typeof entry[1];if(Array.isArray(entry[1])){result[entry[0]]=entry[1].map(function(entry){return stringifyNumbers(entry);});}else if(type==='object'&&!!entry[1]){result[entry[0]]=stringifyNumbers(entry[1]);}else if(entry[1]===null){result[entry[0]]=null;}else if(type==='number'){result[entry[0]]=String(entry[1]);}else{result[entry[0]]=entry[1];}});return result;};}var NFT=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(props){var _useState7,_useState8,nftData,setNftData,_useState9,_useState10,loading,setLoading;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_useState7=useState([]),_useState8=_slicedToArray(_useState7,2),nftData=_useState8[0],setNftData=_useState8[1];_useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];createConnection();getProvider();useEffect(function(){function data(){return _data.apply(this,arguments);}function _data(){_data=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return getAllNftData();case 2:res=_context4.sent;setNftData(res);setLoading(true);getNftTokenData();case 6:case\"end\":return _context4.stop();}}},_callee4);}));return _data.apply(this,arguments);}data();},[]);case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function NFT(_x){return _ref4.apply(this,arguments);};}();useEffect(function(){setProvider(publicKey);},[]);useEffect(function(){setProvider(publicKey);},[]);useEffect(function(){unityContext.on(\"NFT\",function(){if(window.solana.isConnected){// console.log(JSON.stringify(allNftData));\nunityContext.send(\"SolanaWalletConnect\",\"SetNFTData\",JSON.stringify(allNftData));}else{getProvider().then(function(provider){// console.log('key', provider.publicKey.toString());\npublicKey=provider.publicKey.toString();setProvider(provider.publicKey.toString());}).then(function(){letsgo();}).catch(function(error){console.log(error);console.log(\"fail to make connection5\");});}});},[]);useEffect(function(){unityContext.on(\"Logout\",function(){if(window.solana.isConnected){window.solana.disconnect();window.solana.on('disconnect',function(){return console.log(\"disconnected!\");});unityContext.send(\"SolanaWalletConnect\",\"Disconnected\");}});},[]);useEffect(function(){unityContext.on(\"progress\",function(progression){console.log(\"progress\");setProgression(parseFloat(progression).toFixed(2));});},[]);useEffect(function(){unityContext.on(\"loaded\",function(){console.log(\"loaded\");setIsLoaded(true);});},[]);var some=\"0\";return/*#__PURE__*/React.createElement(\"div\",{style:{visibility:isLoaded?\"hidden\":\"visible\",backgroundImage:\"url(\".concat(background,\")\"),backgroundSize:\"cover\",height:\"100%\",width:\"100%\",color:\"#f5f5f5\",position:'absolute',left:0,top:0}},/*#__PURE__*/React.createElement(\"p\",{style:{visibility:isLoaded?\"hidden\":\"visible\",height:\"30px\",width:\"100%\",position:\"absolute\",textAlign:'center',bottom:\"100px\",fontSize:\"2em\",fontColor:\"red\"}},\"Loading... \",progression*100,\"%\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Unity,{style:{visibility:isLoaded?\"visible\":\"hidden\",height:\"100%\",width:\"100%\",background:\"grey\",position:'absolute',left:0,top:0,overflow:\"hidden\"},unityContext:unityContext})));}export default App;","map":{"version":3,"sources":["/Users/liam/react-moonland/src/App.js"],"names":["React","useState","useEffect","Unity","UnityContext","background","axios","Connection","clusterApiUrl","getParsedNftAccountsByOwner","isValidSolanaAddress","createConnectionConfig","publicKey","allNftData","loc","window","location","href","indexOf","replace","unityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","App","isLoaded","setIsLoaded","progression","setProgression","provider","setProvider","getProvider","solana","connect","isPhantom","alert","letsgo","data","getAllNftData","res","getNftTokenData","createConnection","headers","mode","ownerToken","result","publicAddress","connection","serialization","nfts","console","log","root","arr","nftData","Object","keys","map","key","n","length","i","get","uri","statusCode","val","push","newJson","JSON","parse","value","toString","send","stringify","convertNumbers","jsonArray","stringifyNumbers","obj","entries","entry","type","Array","isArray","String","NFT","props","setNftData","loading","setLoading","on","isConnected","then","catch","error","disconnect","parseFloat","toFixed","some","visibility","backgroundImage","backgroundSize","height","width","color","position","left","top","textAlign","bottom","fontSize","fontColor","overflow"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from \"react\";\nimport Unity, { UnityContext } from \"react-unity-webgl\";\nimport background from \"./background.png\";\nimport axios from \"axios\";\nimport { Connection, clusterApiUrl } from \"@solana/web3.js\";\nimport { getParsedNftAccountsByOwner, isValidSolanaAddress, createConnectionConfig} from \"@nfteyez/sol-rayz\";\nimport './App.css';\n\nvar publicKey;\nvar allNftData;\n\nvar loc = window.location.href+'';\nif (loc.indexOf('http://')==0){\n  window.location.href = loc.replace('http://','https://');\n}\n\nconst unityContext = new UnityContext({\n  loaderUrl: \"./Build/public.loader.js\",\n  dataUrl: \"./Build/public.data\",\n  frameworkUrl: \"./Build/public.framework.js\",\n  codeUrl: \"./Build/public.wasm\"\n});\n\nfunction App() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [progression, setProgression] = useState(0);\n  const [provider, setProvider] = useState(\"\");\n\n\n  const getProvider = async () => {\n    if (\"solana\" in window) {\n      await window.solana.connect();\n      const provider = window.solana;\n      if (provider.isPhantom) {\n        return provider;\n      }\n    } else {\n      window.alert('Install https://www.phantom.app/');\n    }\n  };\n\n  async function letsgo() {\n     createConnection();\n     getProvider();\n       async function data() {\n         let res = await getAllNftData();\n         getNftTokenData();\n       }\n       data();\n  }\n\n  //create a connection\nconst createConnection = () => {\n  // return new Connection(clusterApiUrl(\"devnet\"));\n  return new Connection(\"https://solana-api.projectserum.com/\", {\n    headers: {\n      \"Access-Control-Allow-Origin\":\"*\",\n      \"Access-Control-Request-Headers\":\"*\",\n      \"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n      \"Access-Control-Allow-Headers\": \"Origin, Content-Type\"\n    },\n    mode: 'no-cors'\n    })\n  // Connection(\"https://www.whateverorigin.org/get?url=\" + clusterApiUrl(\"mainnet-beta\"))\n};\n\n  //get NFT\n  const getAllNftData = async () => {\n    try {\n      const connect =  createConnectionConfig(\"https://solana-api.projectserum.com/\", {\n        headers: {\n          \"Access-Control-Allow-Origin\":\"*\",\n          \"Access-Control-Request-Headers\":\"*\",\n          \"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n          \"Access-Control-Allow-Headers\": \"Origin, Content-Type\"\n        },\n        mode: 'no-cors'\n        })\n      // const connect =  createConnectionConfig(clusterApiUrl(\"devnet\"));\n      const provider = getProvider();\n      let ownerToken = publicKey;\n      const result = isValidSolanaAddress(ownerToken);\n      const nfts = await getParsedNftAccountsByOwner({\n        publicAddress: ownerToken,\n        connection: connect,\n        serialization: true,\n      });\n      return nfts;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Function to get all nft data\nconst getNftTokenData = async () => {\n  try {\n    var root = {\n      data:{\n        arr:[]\n      } \n    };\n    let nftData = await getAllNftData();\n    var data = Object.keys(nftData).map((key) => nftData[key]);                                                                    \n    let n = data.length;\n    for (let i = 0; i < n; i++) {\n      let val = await axios.get(data[i].data.uri, {\n          statusCode: 200,\n          headers: {\n            // \"Access-Control-Allow-Origin\":\"*\",\n            // \"Access-Control-Request-Headers\":\"*\",\n            // \"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n            // \"Access-Control-Allow-Headers\": \"Origin, Content-Type\"\n          },\n          mode: 'no-cors'\n      }\n      );\n      root.data.arr.push(val);\n    }\n\n    let newJson = JSON.parse(root.data, (key, value) => {\n      if (typeof value === 'number') {\n        return value.toString();\n      }\n      return value;\n    });\n    allNftData = newJson;\n    // console.log(JSON.stringify(allNftData));\n    unityContext.send(\"SolanaWalletConnect\", \"SetNFTData\", JSON.stringify(allNftData));\n    return root.data.arr;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nfunction convertNumbers(jsonArray) {\n  const stringifyNumbers = obj => {                                                                                      \n    const result = {};                                                                                                   \n    jsonArray.entries(obj).map(entry => {                                                                                   \n      const type = typeof entry[1];                                                                                      \n      if (Array.isArray(entry[1])) {                                                                                     \n        result[entry[0]] = entry[1].map(entry => stringifyNumbers(entry));                                               \n      } else if (type === 'object' && !!entry[1]) {                                                                      \n        result[entry[0]] = stringifyNumbers(entry[1]);                                                                   \n      } else if (entry[1] === null) {                                                                                    \n        result[entry[0]] = null;                                                                                         \n      } else if (type === 'number') {                                                                                    \n        result[entry[0]] = String(entry[1]);                                                                             \n      } else {                                                                                                           \n        result[entry[0]] = entry[1];                                                                                     \n      }                                                                                                                  \n    });                                                                                                                  \n    return result;                                                                                                       \n  }   \n}\n\nconst NFT = async (props) => {\n  const [nftData, setNftData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  createConnection();\n  getProvider();\nuseEffect(() => {\n    async function data() {\n      let res = await getAllNftData();\n      setNftData(res);\n      setLoading(true);\n      getNftTokenData();\n    }\n    data();\n  }, []);\n}\n  \n  useEffect( () => {\n   setProvider(publicKey);\n  }, []);\n  useEffect( () => {\n    setProvider(publicKey);\n   }, []);\n\n   useEffect(function () {    \n    unityContext.on(\"NFT\", function () {\n      if (window.solana.isConnected) {\n        // console.log(JSON.stringify(allNftData));\n\n        unityContext.send(\"SolanaWalletConnect\", \"SetNFTData\", JSON.stringify(allNftData));\n      } else {\n        getProvider().then(provider => {\n          // console.log('key', provider.publicKey.toString());\n          publicKey = provider.publicKey.toString();\n          setProvider(provider.publicKey.toString());\n        }).then(() => {\n          letsgo();\n        }).catch(function(error){\n          console.log(error)\n          console.log(\"fail to make connection5\");\n        });\n      }\n    });\n  }, []);\n\n  useEffect(function () {    \n    unityContext.on(\"Logout\", function () {\n      if (window.solana.isConnected) {\n        window.solana.disconnect();\n        window.solana.on('disconnect', () => console.log(\"disconnected!\"))\n        unityContext.send(\"SolanaWalletConnect\", \"Disconnected\");\n      }\n    });\n  }, []);\n\n  useEffect(function () {\n    unityContext.on(\"progress\", function (progression) {\n      console.log(\"progress\");\n      setProgression(parseFloat(progression).toFixed(2));\n    });\n  }, []);\n\n\n  useEffect(function () {\n    unityContext.on(\"loaded\", function () {\n      console.log(\"loaded\");\n      setIsLoaded(true);\n    });\n  }, []);\n\nvar some = \"0\";\n  return (\n\n  <div style = {{\n    visibility: isLoaded ? \"hidden\" : \"visible\",\n    backgroundImage: `url(${background})`,\n      backgroundSize: \"cover\",\n      height: \"100%\",\n      width: \"100%\",\n      color: \"#f5f5f5\",\n    position: 'absolute',\n    left: 0,\n    top: 0,\n  }}>\n\n   <p\n    style={{ visibility: isLoaded ? \"hidden\" : \"visible\",\n    height: \"30px\",\n    width: \"100%\",\n    position: \"absolute\",\n    textAlign: 'center',\n    bottom: \"100px\",\n    fontSize: \"2em\",\n    fontColor: \"red\",\n\n    \n \n    }}>Loading... {progression * 100}%</p>\n\n    \n   \n   <div>\n   <Unity\n      style={{ visibility: isLoaded ? \"visible\" : \"hidden\",\n        height: \"100%\",\n        width: \"100%\",\n        background: \"grey\",\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        overflow: \"hidden\",\n     \n    }}\n      unityContext={unityContext}\n    />\n    </div>\n    </div>\n  );\n\n  }\n\n  \n  \nexport default App"]},"metadata":{},"sourceType":"module"}